# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XQgcDywBNBX75RcrTFL3xZ2Rhf8WiZzw
"""

from sklearn.model_selection import GridSearchCV
from sklearn.tree import DecisionTreeClassifier
import pandas as pd

df = pd.read_csv("final_train.csv")
X_train = df.drop("y", axis=1)
y_train = df["y"]

dt = DecisionTreeClassifier(random_state=42)
param_grid = {
    'max_depth': [3,5,7],
    'min_samples_split': [6,7,8],
    'min_samples_leaf': [4,5,6],
    'criterion': ['gini','entropy']
}
grid = GridSearchCV(
    estimator=dt,
    param_grid=param_grid,
    scoring='accuracy',
    cv=5,
    n_jobs=-1,
    return_train_score=True
)
grid.fit(X_train, y_train)

print("Best params:", grid.best_params_)
print("Best CV accuracy:", grid.best_score_)

dt = DecisionTreeClassifier(random_state=42)
param_grid = {
    'max_depth': [6,7,8],
    'min_samples_split': [5,6,7],
    'min_samples_leaf': [5,6,7]
}
grid = GridSearchCV(
    estimator=dt,
    param_grid=param_grid,
    scoring='accuracy',
    cv=5,
    n_jobs=-1,
    return_train_score=True
)
grid.fit(X_train, y_train)

print("Best params:", grid.best_params_)
print("Best CV accuracy:", grid.best_score_)

dt = DecisionTreeClassifier(random_state=42)
param_grid = {
    'max_depth': [7,8,9,10],
    'min_samples_split': [3,4,5],
    'min_samples_leaf': [7,8,9]
}
grid = GridSearchCV(
    estimator=dt,
    param_grid=param_grid,
    scoring='accuracy',
    cv=5,
    n_jobs=-1,
    return_train_score=True
)
grid.fit(X_train, y_train)

print("Best params:", grid.best_params_)
print("Best CV accuracy:", grid.best_score_)

final_dt = DecisionTreeClassifier(max_depth=8, min_samples_leaf=7, min_samples_split=3, random_state=42)

