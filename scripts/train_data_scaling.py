# -*- coding: utf-8 -*-
"""train_data_scaling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PcYWTTC125QrGs1cpRMWIiJk4XTUPUI6
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler

df = pd.read_csv("./train_selected.csv")

# 뒤쪽 14개 열 떼어내기 (범주형 변수 인코딩한 열, y)
df_tail = df.iloc[:, -14:]
# 참고: 테스트셋에서는 y열이 없으므로 뒤쪽 13개를 떼어내는 것으로 바꾼 후 코드 돌림

# 앞쪽 수치형 변수만 선택
df_numeric = df.iloc[:, :-14]

# 왜도 확인
skewness = df_numeric.skew()

# 왜도 절대값 > 1인 열들에 로그 변환 적용
high_skew_cols = skewness[skewness.abs() > 1.0].index

for col in high_skew_cols:
    min_val = df_numeric[col].min()

    # 모든 값이 0보다 크면 그대로 로그 변환
    if min_val >= 0:
        df_numeric[col] = np.log1p(df_numeric[col])  # log(1 + x) 안정적
    else:
        # 음수나 0이 있는 경우: 값을 양수로 이동 후 로그 변환
        shift = 1 - min_val
        df_numeric[col] = np.log1p(df_numeric[col] + shift)


# 수치형 전체에 StandardScaler 적용
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_numeric)

# 최종 버전 구성
df_scaled = pd.DataFrame(scaled_data, columns=df_numeric.columns)
df_final = pd.concat([df_scaled, df_tail], axis=1)

# 저장 및 확인
df_final.to_csv("final_train.csv", index=False)
print("✅ 저장 완료. 최종 데이터 형태:", df_final.shape)

df_final